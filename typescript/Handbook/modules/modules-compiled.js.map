{"version":3,"sources":["modules.js"],"names":[],"mappings":";;;AAGA,IAAI,UAAJ;AACA,CAAC,UAAU,UAAV,EAAsB;AACnB,QAAI,gBAAgB,aAAhB,CADe;AAEnB,QAAI,eAAe,UAAf,CAFe;AAGnB,QAAI,uBAAuB,YAAa;AACpC,iBAAS,oBAAT,GAAgC,EAAhC;AAEA,6BAAqB,SAArB,CAA+B,YAA/B,GAA8C,UAAU,CAAV,EAAa;AACvD,mBAAO,cAAc,IAAd,CAAmB,CAAnB,CAAP,CADuD;SAAb,CAHV;AAMpC,eAAO,oBAAP,CANoC;KAAZ,EAAxB,CAHe;AAWnB,eAAW,oBAAX,GAAkC,oBAAlC,CAXmB;AAYnB,QAAI,mBAAmB,YAAa;AAChC,iBAAS,gBAAT,GAA4B,EAA5B;AAEA,yBAAiB,SAAjB,CAA2B,YAA3B,GAA0C,UAAU,CAAV,EAAa;AACnD,mBAAO,EAAE,MAAF,IAAY,CAAZ,IAAiB,aAAa,IAAb,CAAkB,CAAlB,CAAjB,CAD4C;SAAb,CAHV;AAMhC,eAAO,gBAAP,CANgC;KAAZ,EAApB,CAZe;AAoBnB,eAAW,gBAAX,GAA8B,gBAA9B,CApBmB;CAAtB,CAAD,CAqBG,eAAe,aAAa,EAAb,CAAf,CArBH;AAsBA,IAAI,UAAU,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,CAAV;AACJ,IAAI,aAAa,EAAb;AACJ,WAAW,UAAX,IAAyB,IAAI,WAAW,gBAAX,EAA7B;AACA,WAAW,cAAX,IAA6B,IAAI,WAAW,oBAAX,EAAjC;AACA,QAAQ,OAAR,CAAgB,UAAU,CAAV,EAAa;AACzB,SAAK,IAAI,IAAJ,IAAY,UAAjB,EAA6B;AACzB,gBAAQ,GAAR,CAAY,MAAM,CAAN,GAAU,GAAV,IAAiB,WAAW,IAAX,EAAiB,YAAjB,CAA8B,CAA9B,IAAmC,WAAnC,GAAiD,kBAAjD,CAAjB,GAAwF,IAAxF,CAAZ,CADyB;KAA7B;CADY,CAAhB","file":"modules-compiled.js","sourcesContent":["/**\n * Created by bgd on 16/3/21.\n */\nvar Validation;\n(function (Validation) {\n    var lettersRegexp = /^[A-Za-z]+$/;\n    var numberRegexp = /^[0-9]+$/;\n    var LettersOnlyValidator = (function () {\n        function LettersOnlyValidator() {\n        }\n        LettersOnlyValidator.prototype.isAcceptable = function (s) {\n            return lettersRegexp.test(s);\n        };\n        return LettersOnlyValidator;\n    })();\n    Validation.LettersOnlyValidator = LettersOnlyValidator;\n    var ZipCodeValidator = (function () {\n        function ZipCodeValidator() {\n        }\n        ZipCodeValidator.prototype.isAcceptable = function (s) {\n            return s.length == 5 && numberRegexp.test(s);\n        };\n        return ZipCodeValidator;\n    })();\n    Validation.ZipCodeValidator = ZipCodeValidator;\n})(Validation || (Validation = {}));\nvar strings = [\"Hello\", \"98052\", \"101\"];\nvar validators = {};\nvalidators[\"Zip Code\"] = new Validation.ZipCodeValidator();\nvalidators[\"Letters only\"] = new Validation.LettersOnlyValidator();\nstrings.forEach(function (s) {\n    for (var name in validators) {\n        console.log('\"' + s + '\"' + (validators[name].isAcceptable(s) ? \" matches \" : \" does not match \") + name);\n    }\n});\n//# sourceMappingURL=modules.js.map"]}